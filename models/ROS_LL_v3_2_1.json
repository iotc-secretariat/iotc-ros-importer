{ "Ros 3.2.1 - LL": { 
 "O-INFO": { "comment": "#[ 2] = O-INFO | From row 6 - 25 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "OBSERVER_IDENTIFICATION_OBSERVER_IOTC_NUMBER", "location": "ros_common.observer_identification→iotc_number"} , 
 { "OptionalSimpleColumn": "OBSERVER_IDENTIFICATION_FULL_NAME", "location": "ros_common.observer_identification→full_name"} , 
 { "OptionalForeignKeyColumn": "OBSERVER_IDENTIFICATION_NATIONALITY_CODE", "location": "ros_common.observer_identification→nationality_code", "fk": "refs_admin.countries→code"} , 
 { "OptionalForeignKeyColumn": "OBSERVER_TRIP_DETAILS_EMBARKATION_IN_PORT_COUNTRY_CODE", "location": "ros_common.locations→country_code", "fk": "refs_admin.countries→code"} , 
 { "OptionalForeignKeyColumn": "OBSERVER_TRIP_DETAILS_EMBARKATION_IN_PORT_PORT_CODE", "location": "ros_common.locations→name", "fk": "refs_admin.ports→code", "comment": "Fixme: does not exist in ros_common.locations"} , 
 { "OptionalSimpleColumn": "OBSERVER_TRIP_DETAILS_EMBARKATION_AT_SEA_LATITUDE", "location": "ros_common.locations→latitude"} , 
 { "OptionalSimpleColumn": "OBSERVER_TRIP_DETAILS_EMBARKATION_AT_SEA_LONGITUDE", "location": "ros_common.locations→longitude"} , 
 { "OptionalSimpleColumn": "OBSERVER_TRIP_DETAILS_EMBARKATION_AT_SEA_TIMESTAMP", "location": "ros_common.observer_trip_details→date_time_embarkation"} , 
 { "OptionalForeignKeyColumn": "OBSERVER_TRIP_DETAILS_DISEMBARKATION_IN_PORT_COUNTRY_CODE", "location": "ros_common.locations→country_code", "fk": "refs_admin.countries→code"} , 
 { "OptionalForeignKeyColumn": "OBSERVER_TRIP_DETAILS_DISEMBARKATION_IN_PORT_PORT_CODE", "location": "ros_common.locations→name", "fk": "refs_admin.ports→code", "comment": "Fixme: does not exist in ros_common.locations"} , 
 { "OptionalSimpleColumn": "OBSERVER_TRIP_DETAILS_DISEMBARKATION_AT_SEA_LATITUDE", "location": "ros_common.locations→latitude"} , 
 { "OptionalSimpleColumn": "OBSERVER_TRIP_DETAILS_DISEMBARKATION_AT_SEA_LONGITUDE", "location": "ros_common.locations→longitude"} , 
 { "OptionalSimpleColumn": "OBSERVER_TRIP_DETAILS_DISEMBARKATION_AT_SEA_TIMESTAMP", "location": "ros_common.observer_trip_details→date_time_disembarkation"} , 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_SUMMARY_NUMBER_OF_SETS_CONDUCTED", "location": "ros_common.observed_trip_summary→number_of_conducted_fishing_events_with_observer_onboard"} , 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_SUMMARY_NUMBER_OF_SETS_OBSERVED", "location": "ros_common.observed_trip_summary→number_of_observed_fishing_events"} , 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_SUMMARY_NUMBER_OF_DAYS_SEARCHING", "location": "ros_common.observed_trip_summary→number_of_days_searching"} , 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_SUMMARY_NUMBER_OF_DAYS_ACTIVELY_FISHING", "location": "ros_common.observed_trip_summary→number_of_active_fishing_days"} , 
 { "OptionalSimpleColumn": "OBSERVED_TRIP_SUMMARY_NUMBER_OF_DAYS_IN_FISHING_AREA", "location": "ros_common.observed_trip_summary→number_of_days_in_fishing_area"} , 
 { "OptionalSimpleColumn": "OBSERVED_TRIP_SUMMARY_NUMBER_OF_DAYS_TRANSITING", "location": "ros_common.observed_trip_summary→number_of_days_transiting"} , 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_SUMMARY_NUMBER_OF_DAYS_LOST", "location": "ros_common.observed_trip_summary→number_of_days_lost"} , 
 { "OptionalForeignKeyColumn": "OBSERVED_TRIP_SUMMARY_REASONS_FOR_DAYS_LOST_REASON_1_CODE", "location": "ros_common.reasons_for_days_lost→code", "fk": "refs_fishery.reasons_days_lost→code", "comment": "Fixme (not a fk?)"} , 
 { "OptionalForeignKeyColumn": "OBSERVED_TRIP_SUMMARY_REASONS_FOR_DAYS_LOST_REASON_2_CODE", "location": "ros_common.reasons_for_days_lost→code", "fk": "refs_fishery.reasons_days_lost→code", "comment": "Fixme (not a fk?)"} , 
 { "OptionalForeignKeyColumn": "OBSERVED_TRIP_SUMMARY_REASONS_FOR_DAYS_LOST_REASON_3_CODE", "location": "ros_common.reasons_for_days_lost→code", "fk": "refs_fishery.reasons_days_lost→code", "comment": "Fixme (not a fk?)"} , 
 { "OptionalForeignKeyColumn": "OBSERVED_TRIP_SUMMARY_REASONS_FOR_DAYS_LOST_REASON_4_CODE", "location": "ros_common.reasons_for_days_lost→code", "fk": "refs_fishery.reasons_days_lost→code", "comment": "Fixme (not a fk?)"} ] } , 
 "V-INFO": { "comment": "#[ 3] = V-INFO | From row 6 - 32 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "VESSEL_INFORMATION_IDENTIFICATION_NAME", "location": "ros_common.vessel_identification→NAME"} , 
 { "MandatoryForeignKeyColumn": "VESSEL_INFORMATION_IDENTIFICATION_FLAG_OR_CHARTERING_CODE", "location": "ros_common.vessel_identification→flag_code", "fk": "refs_admin.countries→code", "comment": "Fixme : not found"} , 
 { "MandatorySimpleColumn": "VESSEL_INFORMATION_IDENTIFICATION_IOTC_NUMBER", "location": "ros_common.vessel_identification→iotc_number"} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_IDENTIFICATION_IMO_NUMBER", "location": "ros_common.vessel_identification→imo_number"} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_IDENTIFICATION_IRCS", "location": "ros_common.vessel_identification→ircs"} , 
 { "MandatoryForeignKeyColumn": "VESSEL_INFORMATION_IDENTIFICATION_REGISTRATION_COUNTRY_CODE", "location": "ros_common.vessel_identification→flag_code", "fk": "refs_admin.countries→code"} , 
 { "MandatoryForeignKeyColumn": "VESSEL_INFORMATION_IDENTIFICATION_REGISTRATION_PORT_CODE", "location": "ros_common.vessel_identification→port_code", "fk": "refs_admin.ports→code"} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_IDENTIFICATION_REGISTRATION_NUMBER", "location": "ros_common.vessel_identification→registration_number"} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_IDENTIFICATION_CONTACT_PHONE_1", "location": "ros_common.texts→value", "comment": "Fixme Remove this nasty table texts..."} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_IDENTIFICATION_CONTACT_PHONE_2", "location": "ros_common.texts→value", "comment": "Fixme Remove this nasty table texts..."} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_IDENTIFICATION_CONTACT_FAX_1", "location": "ros_common.texts→value", "comment": "Fixme Remove this nasty table texts..."} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_IDENTIFICATION_CONTACT_FAX_2", "location": "ros_common.texts→value", "comment": "Fixme Remove this nasty table texts..."} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_IDENTIFICATION_CONTACT_EMAIL_1", "location": "ros_common.texts→value", "comment": "Fixme Remove this nasty table texts..."} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_IDENTIFICATION_CONTACT_EMAIL_2", "location": "ros_common.texts→value"} , 
 { "OptionalForeignKeyColumn": "VESSEL_INFORMATION_IDENTIFICATION_LICENSED_TARGET_SPECIES_SPECIES_1_CODE", "location": "ros_common.vessel_identification_licensed_target_species→licensed_target_species_code", "fk": "refs_biological.species→code"} , 
 { "OptionalForeignKeyColumn": "VESSEL_INFORMATION_IDENTIFICATION_LICENSED_TARGET_SPECIES_SPECIES_2_CODE", "location": "ros_common.vessel_identification_licensed_target_species→licensed_target_species_code", "fk": "refs_biological.species→code"} , 
 { "OptionalForeignKeyColumn": "VESSEL_INFORMATION_IDENTIFICATION_LICENSED_TARGET_SPECIES_SPECIES_3_CODE", "location": "ros_common.vessel_identification_licensed_target_species→licensed_target_species_code", "fk": "refs_biological.species→code"} , 
 { "OptionalForeignKeyColumn": "VESSEL_INFORMATION_IDENTIFICATION_LICENSED_TARGET_SPECIES_SPECIES_4_CODE", "location": "ros_common.vessel_identification_licensed_target_species→licensed_target_species_code", "fk": "refs_biological.species→code"} , 
 { "MandatoryForeignKeyColumn": "VESSEL_INFORMATION_IDENTIFICATION_MAIN_FISHING_GEAR_CODE", "location": "ros_common.vessel_identification→main_fishing_gear_code", "fk": "refs_fishery.gears→code"} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_OWNER_AND_PERSONNEL_OWNER_FULL_NAME", "location": "ros_common.person_contact_details→full_name"} , 
 { "OptionalForeignKeyColumn": "VESSEL_INFORMATION_OWNER_AND_PERSONNEL_OWNER_NATIONALITY_CODE", "location": "ros_common.person_contact_details→nationality_code", "fk": "refs_admin.countries→code"} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_OWNER_AND_PERSONNEL_OWNER_CONTACT_DETAILS", "location": "ros_common.person_contact_details→contact_details"} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_OWNER_AND_PERSONNEL_CHARTER_OR_OPERATOR_FULL_NAME", "location": "ros_common.person_contact_details→full_name"} , 
 { "OptionalForeignKeyColumn": "VESSEL_INFORMATION_OWNER_AND_PERSONNEL_CHARTER_OR_OPERATOR_NATIONALITY_CODE", "location": "ros_common.person_contact_details→nationality_code", "fk": "refs_admin.countries→code"} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_OWNER_AND_PERSONNEL_CHARTER_OR_OPERATOR_CONTACT_DETAILS", "location": "ros_common.person_contact_details→contact_details"} , 
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_OWNER_AND_PERSONNEL_CHARTER_OR_OPERATOR_CONTACT_DETAILS2", "location": "ros_common.person_contact_details→contact_details", "comment": "Fixme : not found"} , 
 { "MandatorySimpleColumn": "VESSEL_INFORMATION_OWNER_AND_PERSONNEL_FISHING_MASTER_FULL_NAME", "location": "ros_common.person_details→full_name"} ,
 { "MandatoryForeignKeyColumn": "VESSEL_INFORMATION_OWNER_AND_PERSONNEL_FISHING_MASTER_NATIONALITY_CODE", "location": "ros_common.person_details→nationality_code", "fk": "refs_admin.countries→code"} ,
 { "MandatorySimpleColumn": "VESSEL_INFORMATION_OWNER_AND_PERSONNEL_SKIPPER_CAPTAIN_FULL_NAME", "location": "ros_common.person_details→full_name"} ,
 { "MandatoryForeignKeyColumn": "VESSEL_INFORMATION_OWNER_AND_PERSONNEL_SKIPPER_CAPTAIN_NATIONALITY_CODE", "location": "ros_common.person_details→nationality_code", "fk": "refs_admin.countries→code"} ,
 { "OptionalSimpleColumn": "VESSEL_INFORMATION_OWNER_AND_PERSONNEL_CREW_NUMBER", "location": "ros_common.vessel_owner_and_personnel→number_of_crew"} ] } , 
 "V-TRIP": { "comment": "#[ 4] = V-TRIP | From row 6 - 11 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "OptionalForeignKeyColumn": "TRIP_DETAILS_VESSEL_DEPARTURE_PORT_COUNTRY_CODE", "location": "a→b", "fk": "refs_admin.countries→code", "comment": "Fixme : not found"} , 
 { "OptionalForeignKeyColumn": "TRIP_DETAILS_VESSEL_DEPARTURE_PORT_PORT_CODE", "location": "ros_common.vessel_trip_details→departure_port_code", "fk": "refs_admin.ports→code"} , 
 { "OptionalSimpleColumn": "TRIP_DETAILS_VESSEL_DEPARTURE_PORT_LATITUDE", "location": "a→b", "comment": "Fixme : not found"} , 
 { "OptionalSimpleColumn": "TRIP_DETAILS_VESSEL_DEPARTURE_PORT_LONGITUDE", "location": "a→b", "comment": "Fixme : not found"} , 
 { "OptionalSimpleColumn": "TRIP_DETAILS_VESSEL_DEPARTURE_TIMESTAMP", "location": "ros_common.vessel_trip_details→date_time_vessel_sailed"} , 
 { "OptionalForeignKeyColumn": "TRIP_DETAILS_VESSEL_RETURN_PORT_COUNTRY_CODE", "location": "a→b", "fk": "refs_admin.countries→code", "comment": "Fixme : not found"} , 
 { "OptionalForeignKeyColumn": "TRIP_DETAILS_VESSEL_RETURN_PORT_PORT_CODE", "location": "ros_common.vessel_trip_details→return_port_code", "fk": "refs_admin.ports→code"} , 
 { "OptionalSimpleColumn": "TRIP_DETAILS_VESSEL_RETURN_PORT_LATITUDE", "location": "a→b", "comment": "Fixme : not found"} , 
 { "OptionalSimpleColumn": "TRIP_DETAILS_VESSEL_RETURN_PORT_LONGITUDE", "location": "a→b", "comment": "Fixme : not found"} , 
 { "OptionalSimpleColumn": "TRIP_DETAILS_VESSEL_RETURN_TIMESTAMP", "location": "ros_common.vessel_trip_details→date_time_vessel_returned_to_port"} ] } , 
 "V-ATTRIBUTES": { "comment": "#[ 5] = V-ATTRIBUTES | From row 6 - 50 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatoryMeasurementValueColumn": "VESSEL_ATTRIBUTES_TONNAGE_VALUE", "location": "ros_common.vessel_attributes→tonnage_id", "measurement_table": "ros_common.tonnages"} , 
 { "MandatoryMeasurementUnitColumn": "VESSEL_ATTRIBUTES_TONNAGE_GT_GRT", "units": ["GT" ,"GRT"]} , 
 { "MandatoryMeasurementValueColumn": "VESSEL_ATTRIBUTES_LENGTH_OVERALL_VALUE", "location": "ros_common.vessel_attributes→loa_id", "measurement_table": "ros_common.lengths"} , 
 { "MandatoryMeasurementUnitColumn": "VESSEL_ATTRIBUTES_LENGTH_OVERALL_M_FT", "units": ["M" ,"FT"]} , 
 { "MandatoryForeignKeyColumn": "VESSEL_ATTRIBUTES_HULL_MATERIAL_CODE", "location": "ros_common.vessel_attributes→hull_material_code", "fk": "refs_fishery.hull_material_types→code"} , 
 { "MandatorySimpleColumn": "VESSEL_ATTRIBUTES_MAIN_ENGINE_1_MAKE", "location": "ros_common.engines→make"} , 
 { "MandatoryMeasurementValueColumn": "VESSEL_ATTRIBUTES_MAIN_ENGINE_1_POWER_VALUE", "location": "ros_common.engines→value", "measurement_table": "ros_common.engines"} , 
 { "MandatoryMeasurementUnitColumn": "VESSEL_ATTRIBUTES_MAIN_ENGINE_1_KW_HP_BHP", "units": ["KW" ,"HP" ,"BHP"]} , 
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_MAIN_ENGINE_2_MAKE", "location": "ros_common.engines→make"} , 
 { "OptionalMeasurementValueColumn": "VESSEL_ATTRIBUTES_MAIN_ENGINE_2_POWER_VALUE", "location": "ros_common.engines→value", "measurement_table": "ros_common.engines"} , 
 { "OptionalMeasurementUnitColumn": "VESSEL_ATTRIBUTES_MAIN_ENGINE_2_KW_HP_BHP", "units": ["KW" ,"HP" ,"BHP"]} , 
 { "MandatoryMeasurementValueColumn": "VESSEL_ATTRIBUTES_FISH_STORAGE_CAPACITY_VALUE", "location": "ros_common.vessel_attributes→fish_storage_capacity_id", "measurement_table": "ros_common.capacities"} , 
 { "OptionalMeasurementUnitColumn": "VESSEL_ATTRIBUTES_FISH_STORAGE_CAPACITY_T_M3", "units": ["T" ,"M3"]} , 
 { "OptionalForeignKeyColumn": "VESSEL_ATTRIBUTES_FISH_PRESERVATION_METHODS_METHOD_1_CODE", "location": "ros_common.vessel_attributes_fish_preservation_method→fish_preservation_method_code", "fk": "refs_fishery.fish_preservation_methods→code"} , 
 { "OptionalForeignKeyColumn": "VESSEL_ATTRIBUTES_FISH_PRESERVATION_METHODS_METHOD_2_CODE", "location": "ros_common.vessel_attributes_fish_preservation_method→fish_preservation_method_code", "fk": "refs_fishery.fish_preservation_methods→code"} , 
 { "OptionalForeignKeyColumn": "VESSEL_ATTRIBUTES_FISH_PRESERVATION_METHODS_METHOD_3_CODE", "location": "ros_common.vessel_attributes_fish_preservation_method→fish_preservation_method_code", "fk": "refs_fishery.fish_preservation_methods→code"} , 
 { "OptionalForeignKeyColumn": "VESSEL_ATTRIBUTES_FISH_PRESERVATION_METHODS_METHOD_4_CODE", "location": "ros_common.vessel_attributes_fish_preservation_method→fish_preservation_method_code", "fk": "refs_fishery.fish_preservation_methods→code"} , 
 { "OptionalForeignKeyColumn": "VESSEL_ATTRIBUTES_FISH_STORAGE_TYPES_TYPE_1_CODE", "location": "ros_common.vessel_attributes_fish_storage_type→fish_storage_type_code", "fk": "refs_fishery.fish_storage_types→code"} , 
 { "OptionalForeignKeyColumn": "VESSEL_ATTRIBUTES_FISH_STORAGE_TYPES_TYPE_2_CODE", "location": "ros_common.vessel_attributes_fish_storage_type→fish_storage_type_code", "fk": "refs_fishery.fish_storage_types→code"} , 
 { "OptionalForeignKeyColumn": "VESSEL_ATTRIBUTES_FISH_STORAGE_TYPES_TYPE_3_CODE", "location": "ros_common.vessel_attributes_fish_storage_type→fish_storage_type_code", "fk": "refs_fishery.fish_storage_types→code"} , 
 { "OptionalMeasurementValueColumn": "VESSEL_ATTRIBUTES_AUTONOMY_RANGE_VALUE", "location": "ros_common.vessel_attributes→autonomy_range_id", "measurement_table": "ros_common.ranges"} , 
 { "OptionalMeasurementUnitColumn": "VESSEL_ATTRIBUTES_AUTONOMY_RANGE_DAYS_NM", "units": ["DAYS" ,"NM"]} , 
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_GPS", "location": "ros_common.vessel_electronics→gps"} ,
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_VMS", "location": "ros_common.vessel_electronics→vms"} ,
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_AIS", "location": "ros_common.vessel_electronics→ais"} ,
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_RADARS", "location": "ros_common.vessel_electronics→radars"} ,
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_TRACK_PLOTTER", "location": "ros_common.vessel_electronics→track_plotter"} ,
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_DEPTH_SOUNDER", "location": "ros_common.vessel_electronics→depth_sounder"} ,
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_SONAR", "location": "ros_common.vessel_electronics→sonar"} ,
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_DOPPLER_CURRENT_METER", "location": "ros_common.vessel_electronics→doppler_current_meter"} ,
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_XBT", "location": "ros_common.vessel_electronics→expendable_bathythermographs"} ,
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_VHF_RADIOS", "location": "ros_common.vessel_electronics→vhf_radios"} , 
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_HF_RADIOS", "location": "ros_common.vessel_electronics→hf_radios"} , 
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_SATELLITE_COMM", "location": "ros_common.vessel_electronics→satellite_communication_systems"} , 
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_SST_GAUGE", "location": "ros_common.vessel_electronics→sea_surface_temperature_gauge"} , 
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_WEATHER_FAX", "location": "ros_common.vessel_electronics→weather_facsimile"} , 
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_VESSEL_ELECTRONICS_FIS", "location": "ros_common.vessel_electronics→fisheries_information_services"} , 
 { "MandatoryForeignKeyColumn": "VESSEL_ATTRIBUTES_WASTE_MANAGEMENT_WASTE_MANAGEMENT_DETAIL_1_CATEGORY_1_CODE", "location": "ros_common.waste_managements→waste_category_code", "fk": "refs_fishery.waste_categories→code"} , 
 { "MandatoryForeignKeyColumn": "VESSEL_ATTRIBUTES_WASTE_MANAGEMENT_WASTE_MANAGEMENT_DETAIL_1_STORAGE_DISPOSAL_METHOD_1_CODE", "location": "ros_common.waste_managements→waste_storage_or_disposal_method_code", "fk": "refs_fishery.waste_disposal_methods→code"} , 
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_WASTE_MANAGEMENT_WASTE_MANAGEMENT_DETAIL_1_OTHER_1", "location": "ros_common.waste_managements→b", "comment": "Fixme : not found"} , 
 { "OptionalForeignKeyColumn": "VESSEL_ATTRIBUTES_WASTE_MANAGEMENT_WASTE_MANAGEMENT_DETAIL_2_CATEGORY_2_CODE", "location": "ros_common.waste_managements→waste_category_code", "fk": "refs_fishery.waste_categories→code"} , 
 { "OptionalForeignKeyColumn": "VESSEL_ATTRIBUTES_WASTE_MANAGEMENT_WASTE_MANAGEMENT_DETAIL_2_STORAGE_DISPOSAL_METHOD_2_CODE", "location": "ros_common.waste_managements→waste_storage_or_disposal_method_code", "fk": "refs_fishery.waste_disposal_methods→code"} , 
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_WASTE_MANAGEMENT_WASTE_MANAGEMENT_DETAIL_2_OTHER_2", "location": "ros_common.waste_managements→b", "comment": "Fixme : not found"} , 
 { "OptionalForeignKeyColumn": "VESSEL_ATTRIBUTES_WASTE_MANAGEMENT_WASTE_MANAGEMENT_DETAIL_3_CATEGORY_3_CODE", "location": "ros_common.waste_managements→waste_category_code", "fk": "refs_fishery.waste_categories→code"} , 
 { "OptionalForeignKeyColumn": "VESSEL_ATTRIBUTES_WASTE_MANAGEMENT_WASTE_MANAGEMENT_DETAIL_3_STORAGE_DISPOSAL_METHOD_3_CODE", "location": "ros_common.waste_managements→waste_storage_or_disposal_method_code", "fk": "refs_fishery.waste_disposal_methods→code"} , 
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_WASTE_MANAGEMENT_WASTE_MANAGEMENT_DETAIL_3_OTHER_3", "location": "ros_common.waste_managements→b", "comment": "Fixme : not found"} , 
 { "OptionalForeignKeyColumn": "VESSEL_ATTRIBUTES_WASTE_MANAGEMENT_WASTE_MANAGEMENT_DETAIL_4_CATEGORY_4_CODE", "location": "ros_common.waste_managements→waste_category_code", "fk": "refs_fishery.waste_categories→code"} , 
 { "OptionalForeignKeyColumn": "VESSEL_ATTRIBUTES_WASTE_MANAGEMENT_WASTE_MANAGEMENT_DETAIL_4_STORAGE_DISPOSAL_METHOD_4_CODE", "location": "ros_common.waste_managements→waste_storage_or_disposal_method_code", "fk": "refs_fishery.waste_disposal_methods→code"} , 
 { "OptionalSimpleColumn": "VESSEL_ATTRIBUTES_WASTE_MANAGEMENT_WASTE_MANAGEMENT_DETAIL_4_OTHER_4", "location": "ros_common.waste_managements→b", "comment": "Fixme : not found"} ] } , 
 "G-GENERAL": { "comment": "#[ 6] = G-GENERAL | From row 6 - 33 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "SPECIAL_EQUIPMENT_OR_MACHINERY_LINE_SETTER", "location": "ros_ll.special_equipment→line_setter"} , 
 { "MandatorySimpleColumn": "SPECIAL_EQUIPMENT_OR_MACHINERY_LINE_HAULER", "location": "ros_ll.special_equipment→line_hauler"} , 
 { "MandatorySimpleColumn": "SPECIAL_EQUIPMENT_OR_MACHINERY_BAIT_CASTING_MACHINE", "location": "ros_ll.special_equipment→bait_casting_machine"} , 
 { "MandatoryForeignKeyColumn": "GENERAL_GEAR_ATTRIBUTES_MAINLINE_MATERIAL_CODE", "location": "ros_ll.general_gear_attributes→line_material_type_code", "fk": "refs_fishery.line_material_types→code"} , 
 { "MandatoryMeasurementValueColumn": "GENERAL_GEAR_ATTRIBUTES_MAINLINE_LENGTH_VALUE", "location": "ros_ll.general_gear_attributes→mainline_length_id", "measurement_table": "ros_common.lengths"} , 
 { "MandatoryMeasurementUnitColumn": "GENERAL_GEAR_ATTRIBUTES_MAINLINE_LENGTH_KM_NM", "units": ["KM" ,"NM"]} , 
 { "OptionalMeasurementValueColumn": "GENERAL_GEAR_ATTRIBUTES_MAINLINE_DIAMETER_VALUE", "location": "ros_ll.general_gear_attributes→mainline_diameter_id", "measurement_table": "ros_common.diameters"} , 
 { "OptionalMeasurementUnitColumn": "GENERAL_GEAR_ATTRIBUTES_MAINLINE_DIAMETER_MM_CM", "units": ["MM" ,"CM"]} , 
 { "OptionalForeignKeyColumn": "ADDITIONAL_BRANCHLINE_DETAILS_STORAGE_1_CODE", "location": "a→b", "fk": "refs_fishery.branchline_storages→code", "comment": "Fixme : not found"} , 
 { "OptionalForeignKeyColumn": "ADDITIONAL_BRANCHLINE_DETAILS_STORAGE_2_CODE", "location": "a→b", "fk": "refs_fishery.branchline_storages→code", "comment": "Fixme : not found"} , 
 { "OptionalForeignKeyColumn": "ADDITIONAL_BRANCHLINE_DETAILS_STORAGE_3_CODE", "location": "a→b", "fk": "refs_fishery.branchline_storages→code", "comment": "Fixme : not found"} , 
 { "OptionalForeignKeyColumn": "ADDITIONAL_BRANCHLINE_DETAILS_STORAGE_4_CODE", "location": "a→b", "fk": "refs_fishery.branchline_storages→code", "comment": "Fixme : not found"} , 
 { "OptionalForeignKeyColumn": "MITIGATION_DEVICES_DEVICE_1_CODE", "location": "ros_ll.gear_specifications_mitigation_device→mitigation_device_code", "fk": "refs_fishery.mitigation_devices→code"} , 
 { "OptionalForeignKeyColumn": "MITIGATION_DEVICES_DEVICE_2_CODE", "location": "ros_ll.gear_specifications_mitigation_device→mitigation_device_code", "fk": "refs_fishery.mitigation_devices→code"} , 
 { "OptionalForeignKeyColumn": "MITIGATION_DEVICES_DEVICE_3_CODE", "location": "ros_ll.gear_specifications_mitigation_device→mitigation_device_code", "fk": "refs_fishery.mitigation_devices→code"} , 
 { "OptionalForeignKeyColumn": "MITIGATION_DEVICES_DEVICE_4_CODE", "location": "ros_ll.gear_specifications_mitigation_device→mitigation_device_code", "fk": "refs_fishery.mitigation_devices→code"} , 
 { "OptionalForeignKeyColumn": "MITIGATION_DEVICES_DEVICE_5_CODE", "location": "ros_ll.gear_specifications_mitigation_device→mitigation_device_code", "fk": "refs_fishery.mitigation_devices→code"} , 
 { "OptionalMeasurementValueColumn": "TORI_LINE_DETAILS_TORI_LINE_LENGTH_VALUE", "location": "ros_ll.tori_line_details→tori_line_length_id", "measurement_table": "ros_common.lengths"} , 
 { "OptionalMeasurementUnitColumn": "TORI_LINE_DETAILS_TORI_LINE_LENGTH_M_FT", "units": ["M" ,"FT"]} , 
 { "OptionalForeignKeyColumn": "TORI_LINE_DETAILS_STREAMER_TYPE_CODE", "location": "ros_ll.tori_line_details→streamer_type", "fk": "refs_fishery.streamer_types→code"} , 
 { "OptionalSimpleColumn": "TORI_LINE_DETAILS_STREAMER_REACH_SURFACE", "location": "ros_ll.tori_line_details→streamers_reach_surface"} , 
 { "OptionalMeasurementValueColumn": "TORI_LINE_DETAILS_STREAMER_LINE_LENGTH_MAX_VALUE", "location": "ros_ll.tori_line_details→streamer_line_length_max_id", "measurement_table": "ros_common.lengths"} , 
 { "OptionalMeasurementUnitColumn": "TORI_LINE_DETAILS_STREAMER_LINE_LENGTH_MAX_CM_M_FT", "units": ["CM" ,"M" ,"FT"]} , 
 { "OptionalMeasurementValueColumn": "TORI_LINE_DETAILS_STREAMER_LINE_LENGTH_MIN_VALUE", "location": "ros_ll.tori_line_details→streamer_line_length_min_id", "measurement_table": "ros_common.lengths"} , 
 { "OptionalMeasurementUnitColumn": "TORI_LINE_DETAILS_STREAMER_LINE_LENGTH_MIN_CM_M_FT", "units": ["CM" ,"M" ,"FT"]} , 
 { "OptionalSimpleColumn": "TORI_LINE_DETAILS_STREAMER_NUMBER_PER_LINE", "location": "ros_ll.tori_line_details→number_of_streamers_per_line"} , 
 { "OptionalMeasurementValueColumn": "TORI_LINE_DETAILS_DISTANCE_BETWEEN_STREAMERS_VALUE", "location": "ros_ll.tori_line_details→streamer_distance_id", "measurement_table": "ros_common.distances"} , 
 { "OptionalMeasurementUnitColumn": "TORI_LINE_DETAILS_DISTANCE_BETWEEN_STREAMERS_CM_M_FT", "units": ["CM" ,"M" ,"FT"]} , 
 { "OptionalMeasurementValueColumn": "TORI_LINE_DETAILS_TORI_LINE_ATTACHED_HEIGHT_VALUE", "location": "ros_ll.tori_line_details→attached_height_id", "measurement_table": "ros_common.heights"} , 
 { "OptionalMeasurementUnitColumn": "TORI_LINE_DETAILS_TORI_LINE_ATTACHED_HEIGHT_CM_M_FT", "units": ["CM" ,"M" ,"FT"]} , 
 { "OptionalSimpleColumn": "TORI_LINE_DETAILS_TOWED_OBJECTS_NUMBER", "location": "ros_ll.tori_line_details→towed_objects_number"} , 
 { "OptionalSimpleColumn": "TORI_LINE_DETAILS_TOWED_OBJECTS_TYPE", "location": "ros_ll.tori_line_details→towed_objects_type"} ] } , 
 "G-CONFIG-BRANCHLINES": { "comment": "#[ 7] = G-CONFIG-BRANCHLINES | From row 6 - 8 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "BRANCHLINE_CONFIGURATIONS_CONFIGURATION_NUMBER", "location": "ros_ll.branchline_configurations→configuration_number"} , 
 { "MandatorySimpleColumn": "BRANCHLINE_CONFIGURATIONS_SECTION_NUMBER", "location": "ros_ll.branchline_sections→section_number"} , 
 { "OptionalForeignKeyColumn": "BRANCHLINE_CONFIGURATIONS_MATERIAL_TYPE_CODE", "location": "ros_ll.branchline_sections→branchline_material_type_code", "fk": "refs_fishery.line_material_types→code"} , 
 { "MandatoryMeasurementValueColumn": "BRANCHLINE_CONFIGURATIONS_LENGTH_VALUE", "location": "ros_ll.branchline_sections→length_id", "measurement_table": "ros_common.lengths"} , 
 { "MandatoryMeasurementUnitColumn": "BRANCHLINE_CONFIGURATIONS_LENGTH_CM_M", "units": ["CM" ,"M"]} , 
 { "MandatoryMeasurementValueColumn": "BRANCHLINE_CONFIGURATIONS_DIAMETER_VALUE", "location": "ros_ll.branchline_sections→diameter_id", "measurement_table": "ros_common.diameters"} , 
 { "MandatoryMeasurementUnitColumn": "BRANCHLINE_CONFIGURATIONS_DIAMETER_MM_CM", "units": ["MM" ,"CM"]} ] } , 
 "E-SET": { "comment": "#[ 8] = E-SET | From row 6 - 24 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "SET_NUMBER", "location": "ros_ll.setting_operations→b"} , 
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_START_SETTING_DATE_TIME_UTC", "location": "ros_ll.setting_operations→start_setting_date_and_time"} , 
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_START_SETTING_LATITUDE", "location": "ros_ll.setting_operations→start_setting_latitude"} , 
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_START_SETTING_LONGITUDE", "location": "ros_ll.setting_operations→start_setting_longitude"} , 
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_END_SETTING_DATE_TIME_UTC", "location": "ros_ll.setting_operations→end_setting_date_and_time"} , 
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_END_SETTING_LATITUDE", "location": "ros_ll.setting_operations→end_setting_latitude"} ,
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_END_SETTING_LONGITUDE", "location": "ros_ll.setting_operations→end_setting_longitude"} ,
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_SPEED_VESSEL_VALUE_KNOTS", "location": "ros_ll.setting_operations→vessel_speed"} ,
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_SPEED_LINE_SETTER_VALUE_MS", "location": "ros_ll.setting_operations→line_setter_speed"} ,
 { "MandatoryMeasurementValueColumn": "SETTING_OPERATIONS_MAINLINE_LENGTH_VALUE", "location": "ros_ll.setting_operations→mainline_set_length_id", "measurement_table": "ros_common.lengths"} , 
 { "MandatoryMeasurementUnitColumn": "SETTING_OPERATIONS_MAINLINE_LENGTH_KM_NM", "units": ["KM" ,"NM"]} , 
 { "OptionalSimpleColumn": "SETTING_OPERATIONS_CLIP_ON_TIME_BRANCHLINE", "location": "ros_ll.setting_operations→branchline_clip_on_time"} , 
 { "OptionalSimpleColumn": "SETTING_OPERATIONS_CLIP_ON_TIME_BUOYS", "location": "ros_ll.setting_operations→buoys_clip_on_time"} , 
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_NUM_TOTAL_HOOKS_SET", "location": "ros_ll.setting_operations→total_number_of_hooks_set"} , 
 { "OptionalSimpleColumn": "SETTING_OPERATIONS_NUM_TOTAL_FLOATS_SET", "location": "ros_ll.setting_operations→total_number_of_floats_set"} , 
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_NUM_HOOKS_BETWEEN_FLOATS", "location": "ros_ll.setting_operations→number_of_hooks_set_between_floats"} ,
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_SHARK_LINES_SET", "location": "ros_ll.setting_operations→shark_lines_set"} , 
 { "OptionalSimpleColumn": "SETTING_OPERATIONS_SHARK_LINES_NUM_LINES", "location": "ros_ll.setting_operations→number_of_shark_lines_set"} , 
 { "MandatoryForeignKeyColumn": "SETTING_OPERATIONS_TARGET_SPECIES_SPECIES_1_CODE", "location": "ros_ll.setting_operations_target_species→target_species_code", "fk": "refs_biological.species→code"} , 
 { "OptionalForeignKeyColumn": "SETTING_OPERATIONS_TARGET_SPECIES_SPECIES_2_CODE", "location": "ros_ll.setting_operations_target_species→target_species_code", "fk": "refs_biological.species→code"} , 
 { "OptionalForeignKeyColumn": "SETTING_OPERATIONS_TARGET_SPECIES_SPECIES_3_CODE", "location": "ros_ll.setting_operations_target_species→target_species_code", "fk": "refs_biological.species→code"} , 
 { "OptionalForeignKeyColumn": "SETTING_OPERATIONS_TARGET_SPECIES_SPECIES_4_CODE", "location": "ros_ll.setting_operations_target_species→target_species_code", "fk": "refs_biological.species→code"} , 
 { "OptionalSimpleColumn": "SETTING_OPERATIONS_VMS_ON", "location": "ros_ll.setting_operations→vms_on"} ] } , 
 "E-SET-LIGHTS": { "comment": "#[ 9] = E-SET-LIGHTS | From row 6 - 5 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "SET_NUMBER", "location": "ros_ll.setting_operations→set_number", "comment": "Fixme : not found"} , 
 { "OptionalForeignKeyColumn": "SETTING_OPERATIONS_ATTACHED_LIGHTS_TYPE_CODE", "location": "ros_ll.lights_by_type_and_colour→light_type_code", "fk": "refs_fishery.light_types→code"} , 
 { "OptionalForeignKeyColumn": "SETTING_OPERATIONS_ATTACHED_LIGHTS_COLOR_CODE", "location": "ros_ll.lights_by_type_and_colour→light_colour_code", "fk": "refs_fishery.light_colours→code"} , 
 { "OptionalSimpleColumn": "SETTING_OPERATIONS_ATTACHED_LIGHTS_NUM_LIGHTS", "location": "ros_ll.lights_by_type_and_colour→number_of_lights_by_type_and_colour"} ] } , 
 "E-SET-BRANCHLINES": { "comment": "#[ 10] = E-SET-BRANCHLINES | From row 6 - 4 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "SET_NUMBER", "location": "ros_ll.setting_operations→set_number", "comment": "Fixme : not found"} , 
 { "OptionalSimpleColumn": "SETTING_OPERATIONS_BRANCHLINE_DETAILS_CONFIGURATION_NUMBER", "location": "ros_ll.branchlines_set→branchline_configuration_number"} , 
 { "OptionalSimpleColumn": "SETTING_OPERATIONS_BRANCHLINE_DETAILS_NUM_BRANCHLINES_SET", "location": "ros_ll.branchlines_set→number_of_branchlines"} ] } , 
 "E-SET-HOOKS": { "comment": "#[ 11] = E-SET-HOOKS | From row 6 - 5 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "SET_NUMBER", "location": "ros_ll.setting_operations→set_number", "comment": "Fixme : not found"} , 
 { "MandatoryForeignKeyColumn": "SETTING_OPERATIONS_HOOKS_DETAILS_TYPE_CODE", "location": "ros_ll.hooks_by_type→hook_type_code", "fk": "refs_fishery.hook_types→code"} , 
 { "OptionalSimpleColumn": "SETTING_OPERATIONS_HOOKS_DETAILS_PERCENTAGE", "location": "ros_ll.hooks_by_type→percentage_of_set"} ,
 { "OptionalSimpleColumn": "SETTING_OPERATIONS_HOOKS_DETAILS_VARIATIONS", "location": "ros_ll.hooks_by_type→variations"} ] } , 
 "E-SET-BAITS": { "comment": "#[ 12] = E-SET-BAITS | From row 6 - 6 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "SET_NUMBER", "location": "ros_ll.setting_operations→set_number", "comment": "Fixme : not found"} , 
 { "MandatoryForeignKeyColumn": "SETTING_OPERATIONS_BAITS_DETAILS_BAIT_CONDITION_CODE", "location": "ros_ll.baits_by_conditions→bait_condition_code", "fk": "refs_biological.bait_conditions→code"} , 
 { "MandatoryForeignKeyColumn": "SETTING_OPERATIONS_BAITS_DETAILS_BAIT_SPECIES_CODE", "location": "ros_ll.baits_by_conditions→species_code", "fk": "refs_biological.species→code"} , 
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_BAITS_DETAILS_BAIT_PERCENTAGE", "location": "ros_ll.baits_by_conditions→ratio"} , 
 { "OptionalSimpleColumn": "SETTING_OPERATIONS_BAITS_DETAILS_BAIT_DYE_COLOUR", "location": "ros_ll.baits_by_conditions→dye_colour"} ] } , 
 "E-SET-MITIGATION-MEASURES": { "comment": "#[13] = E-SET-MITIGATION-MEASURES | From row 6 - 14 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "SET_NUMBER", "location": "ros_ll.setting_operations→set_number", "comment": "Fixme : not found"} , 
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_MITIGATION_MEASURES_NUM_TORI_LINES_DEPLOYED", "location": "ros_ll.mitigation_measures→number_of_tori_lines_deployed"} , 
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_MITIGATION_MEASURES_MIN_DECK_LIGHTING_USED", "location": "ros_ll.mitigation_measures→minimum_deck_lighting_used"} , 
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_MITIGATION_MEASURES_HOOKS_SET_BETWEEN_DUSK_DAWN", "location": "ros_ll.mitigation_measures→hooks_set_between_dusk_and_dawn"} , 
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_MITIGATION_MEASURES_BRANCHLINE_WEIGHTED", "location": "ros_ll.mitigation_measures→branchline_weighted"} , 
 { "MandatoryMeasurementValueColumn": "SETTING_OPERATIONS_MITIGATION_MEASURES_AVG_BRANCHLINE_WEIGHT_G", "location": "ros_ll.mitigation_measures→branchline_average_weight_id", "measurement_table": "ros_common.weights", "unit": "G"} , 
 { "MandatorySimpleColumn": "SETTING_OPERATIONS_MITIGATION_MEASURES_PERC_BRANCHLINE_WEIGHTED", "location": "ros_ll.mitigation_measures→percentage_of_branchlines_weighted"} , 
 { "MandatoryMeasurementValueColumn": "SETTING_OPERATIONS_MITIGATION_MEASURES_HOOK_SINKER_DISTANCE_CM", "location": "ros_ll.mitigation_measures→hook_sinker_distance_id", "measurement_table": "ros_common.distances", "unit": "CM"} , 
 { "OptionalSimpleColumn": "SETTING_OPERATIONS_MITIGATION_MEASURES_UNDERWATER_SETTING", "location": "ros_ll.mitigation_measures→underwater_setting"} , 
 { "MandatoryForeignKeyColumn": "SETTING_OPERATIONS_MITIGATION_MEASURES_OTHER_MITIGATION_MEASURES_USED_MEASURE_1_CODE", "location": "ros_ll.mitigation_measures_mitigation_devices→mitigation_device_code", "fk": "refs_fishery.mitigation_devices→code"} ,
 { "MandatoryForeignKeyColumn": "SETTING_OPERATIONS_MITIGATION_MEASURES_OTHER_MITIGATION_MEASURES_USED_MEASURE_2_CODE", "location": "ros_ll.mitigation_measures_mitigation_devices→mitigation_device_code", "fk": "refs_fishery.mitigation_devices→code"} ,
 { "MandatoryForeignKeyColumn": "SETTING_OPERATIONS_MITIGATION_MEASURES_OTHER_MITIGATION_MEASURES_USED_MEASURE_3_CODE", "location": "ros_ll.mitigation_measures_mitigation_devices→mitigation_device_code", "fk": "refs_fishery.mitigation_devices→code"} ,
 { "MandatoryForeignKeyColumn": "SETTING_OPERATIONS_MITIGATION_MEASURES_OTHER_MITIGATION_MEASURES_USED_MEASURE_4_CODE", "location": "ros_ll.mitigation_measures_mitigation_devices→mitigation_device_code", "fk": "refs_fishery.mitigation_devices→code"} ] } ,
 "E-SET-HAULING": { "comment": "#[14] = E-SET-HAULING | From row 6 - 20 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "SET_NUMBER", "location": "ros_ll.setting_operations→set_number", "comment": "Fixme : not found"} , 
 { "MandatorySimpleColumn": "HAULING_OPERATIONS_START_HAULING_DATE_TIME_UTC", "location": "ros_ll.hauling_operations→start_hauling_date_and_time"} , 
 { "MandatorySimpleColumn": "HAULING_OPERATIONS_START_HAULING_LATITUDE", "location": "ros_ll.hauling_operations→start_hauling_latitude"} , 
 { "MandatorySimpleColumn": "HAULING_OPERATIONS_START_HAULING_LONGITUDE", "location": "ros_ll.hauling_operations→start_hauling_longitude"} , 
 { "OptionalSimpleColumn": "HAULING_OPERATIONS_END_HAULING_DATE_TIME_UTC", "location": "ros_ll.hauling_operations→end_hauling_date_and_time"} , 
 { "OptionalSimpleColumn": "HAULING_OPERATIONS_END_HAULING_LATITUDE", "location": "ros_ll.hauling_operations→end_hauling_latitude"} , 
 { "OptionalSimpleColumn": "HAULING_OPERATIONS_END_HAULING_LONGITUDE", "location": "ros_ll.hauling_operations→end_hauling_longitude"} , 
 { "OptionalSimpleColumn": "HAULING_OPERATIONS_OFFAL_MANAGEMENT", "location": "ros_ll.hauling_operations→offal_management"} , 
 { "OptionalSimpleColumn": "HAULING_OPERATIONS_POSITIONS_OF_OFFAL_DISPOSAL_POSITION_1_CODE", "location": "ros_ll.hauling_offal_disposal_positions→offal_disposal_position"} , 
 { "OptionalSimpleColumn": "HAULING_OPERATIONS_POSITIONS_OF_OFFAL_DISPOSAL_POSITION_2_CODE", "location": "ros_ll.hauling_offal_disposal_positions→offal_disposal_position"} , 
 { "OptionalSimpleColumn": "HAULING_OPERATIONS_POSITIONS_OF_OFFAL_DISPOSAL_POSITION_3_CODE", "location": "ros_ll.hauling_offal_disposal_positions→offal_disposal_position"} , 
 { "OptionalSimpleColumn": "HAULING_OPERATIONS_POSITIONS_OF_OFFAL_DISPOSAL_POSITION_4_CODE", "location": "ros_ll.hauling_offal_disposal_positions→offal_disposal_position"} , 
 { "OptionalForeignKeyColumn": "HAULING_OPERATIONS_METHODS_TO_STUN_FISH_METHOD_1_CODE", "location": "ros_ll.hauling_operations_stunning_methods→stunning_method_code", "fk": "refs_fishery.stunning_methods→code"} , 
 { "OptionalForeignKeyColumn": "HAULING_OPERATIONS_METHODS_TO_STUN_FISH_METHOD_2_CODE", "location": "ros_ll.hauling_operations_stunning_methods→stunning_method_code", "fk": "refs_fishery.stunning_methods→code"} , 
 { "OptionalForeignKeyColumn": "HAULING_OPERATIONS_METHODS_TO_STUN_FISH_METHOD_3_CODE", "location": "ros_ll.hauling_operations_stunning_methods→stunning_method_code", "fk": "refs_fishery.stunning_methods→code"} , 
 { "OptionalForeignKeyColumn": "HAULING_OPERATIONS_METHODS_TO_STUN_FISH_METHOD_4_CODE", "location": "ros_ll.hauling_operations_stunning_methods→stunning_method_code", "fk": "refs_fishery.stunning_methods→code"} , 
 { "OptionalSimpleColumn": "HAULING_OPERATIONS_BIRD_SCARING_DEVICE_AT_HAULER", "location": "ros_ll.hauling_operations→bird_scaring_device_at_hauler"} , 
 { "MandatorySimpleColumn": "HAULING_OPERATIONS_NUM_HOOKS_RETRIEVED_DURING_OBSERVATION", "location": "ros_ll.hauling_operations→number_of_hooks_observed"} , 
 { "MandatoryForeignKeyColumn": "HAULING_OPERATIONS_SAMPLING_PROTOCOL_CODE", "location": "ros_ll.hauling_operations→sampling_protocol_code", "fk": "refs_biological.sampling_protocols→code"} ] } , 
 "E-SET-HAULING-BITEOFFS": { "comment": "#[15] = E-SET-HAULING-BITEOFFS | From row 6 - 4 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "SET_NUMBER", "location": "ros_ll.setting_operations→set_number", "comment": "Fixme : not found"} , 
 { "OptionalSimpleColumn": "HAULING_OPERATIONS_BITEOFFS_DETAILS_BRANCHLINE_CONFIGURATION_NUMBER", "location": "ros_ll.biteoffs_by_branchlines_set→branchline_configuration_number"} , 
 { "OptionalSimpleColumn": "HAULING_OPERATIONS_BITEOFFS_DETAILS_BRANCHLINE_NUM_BITEOFFS", "location": "ros_ll.biteoffs_by_branchlines_set→number_of_biteoffs"} ] } , 
 "E-SET-CATCHES": { "comment": "#[16] = E-SET-CATCHES | From row 6 - 12 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "SET_NUMBER", "location": "ros_ll.setting_operations→set_number", "comment": "Fixme : not found"} , 
 { "MandatorySimpleColumn": "CATCH_NUMBER", "location": "ros_ll.catch_details→catch_detail_number"} , 
 { "MandatoryForeignKeyColumn": "CATCH_DETAILS_SPECIES_CODE", "location": "ros_ll.catch_details→species_code", "fk": "refs_biological.species→code"} , 
 { "MandatoryForeignKeyColumn": "CATCH_DETAILS_FATE_TYPE", "location": "ros_ll.catch_details→type_of_fate_code", "fk": "refs_biological.types_of_fate→code"} , 
 { "MandatoryForeignKeyColumn": "CATCH_DETAILS_FATE_CODE", "location": "ros_ll.catch_details→fates_code", "fk": "refs_biological.fates→code"} , 
 { "MandatoryForeignKeyColumn": "CATCH_DETAILS_SAMPLING_METHOD_CODE", "location": "ros_ll.catch_details→estimated_weight_sampling_method_code", "fk": "refs_biological.sampling_methods_for_catch_estimation→code"} , 
 { "MandatorySimpleColumn": "CATCH_DETAILS_NUM_FISH", "location": "ros_ll.catch_details→estimated_catch_in_numbers"} ,
 { "OptionalForeignKeyColumn": "CATCH_DETAILS_WEIGHT_PROCESSING_TYPE_CODE", "location": "ros_ll.catch_details→b", "fk": "refs_fishery.fish_processing_types→code", "comment": "Fixme : not found"} , 
 { "OptionalMeasurementValueColumn": "CATCH_DETAILS_WEIGHT_VALUE", "location": "ros_ll.catch_details→estimated_weight_id", "measurement_table": "ros_common.estimated_weights"} , 
 { "OptionalMeasurementUnitColumn": "CATCH_DETAILS_WEIGHT_KG_T", "units": ["KG" ,"T"]} , 
 { "OptionalForeignKeyColumn": "CATCH_DETAILS_WEIGHT_ESTIMATION_METHOD_CODE", "location": "ros_ll.catch_details→b", "fk": "refs_biological.sampling_methods_for_catch_estimation→code", "comment": "Fixme : not found"} ] } , 
 "E-SET-CATCHES-SPECIMEN": { "comment": "#[17] = E-SET-CATCHES-SPECIMEN | From row 6 - 32 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "SET_NUMBER", "location": "ros_ll.setting_operations→set_number", "comment": "Fixme : not found"} , 
 { "MandatorySimpleColumn": "CATCH_NUMBER", "location": "ros_ll.catch_details→catch_detail_number"} , 
 { "MandatorySimpleColumn": "SPECIMEN_NUMBER", "location": "ros_ll.specimens→specimen_number"} , 
 { "MandatoryForeignKeyColumn": "SPECIMEN_DETAILS_ALL_SPECIES_SAMPLING_PERIOD_CODE", "location": "ros_ll.specimens→b", "fk": "refs_biological.sampling_periods→code"} , 
 { "MandatoryForeignKeyColumn": "SPECIMEN_DETAILS_NON_TARGET_SPECIES_ADDITIONAL_DETAILS_CONDITION_AT_CAPTURE_CODE", "location": "ros_common.additional_details_on_non_target_species→condition_at_capture_code", "fk": "refs_biological.incidental_captures_conditions→code"} ,
 { "MandatoryForeignKeyColumn": "SPECIMEN_DETAILS_NON_TARGET_SPECIES_ADDITIONAL_DETAILS_CONDITION_AT_RELEASE_CODE", "location": "ros_common.additional_details_on_non_target_species→condition_at_release_code", "fk": "refs_biological.incidental_captures_conditions→code"} ,
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ALL_SPECIES_DEPREDATION_DETAILS_DEPREDATION_SOURCE_CODE", "location": "ros_common.depredation_details→depredation_source_code", "fk": "refs_biological.scars→code", "comment": "Fixme : why not using refs_biological.depredation_sources"} , 
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ALL_SPECIES_DEPREDATION_DETAILS_OBSERVED_PREDATOR_CODE", "location": "ros_common.depredation_details→predator_observed_code", "fk": "refs_biological.species→code"} , 
 { "MandatoryForeignKeyColumn": "SPECIMEN_DETAILS_ALL_SPECIES_SAMPLING_METHOD_CODE", "location": "ros_common.biometric_information→bio_collection_sampling_method_code", "fk": "refs_biological.sampling_methods_for_sampling_collections→code"} , 
 { "MandatoryForeignKeyColumn": "SPECIMEN_DETAILS_ALL_SPECIES_LENGTH_1_TYPE_CODE", "location": "ros_common.measured_lengths→type_of_measurement_code", "fk": "refs_biological.types_of_measurement→code"} , 
 { "MandatoryMeasurementValueColumn": "SPECIMEN_DETAILS_ALL_SPECIES_LENGTH_1_VALUE_CM", "location": "ros_common.measured_lengths→value", "measurement_table": "ros_common.measured_lengths", "unit": "CM"} , 
 { "MandatoryForeignKeyColumn": "SPECIMEN_DETAILS_ALL_SPECIES_LENGTH_1_MEASURING_TOOL_CODE", "location": "ros_common.measured_lengths→length_measuring_tool_code", "fk": "refs_biological.measurement_tools→code"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ALL_SPECIES_LENGTH_1_IS_STRAIGHT", "location": "ros_common.measured_lengths→curved"} , 
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ALL_SPECIES_LENGTH_2_TYPE_CODE", "location": "ros_common.measured_lengths→type_of_measurement_code", "fk": "refs_biological.types_of_measurement→code"} , 
 { "OptionalMeasurementValueColumn": "SPECIMEN_DETAILS_ALL_SPECIES_LENGTH_2_VALUE_CM", "location": "ros_common.measured_lengths→value", "measurement_table": "ros_common.measured_lengths", "unit": "CM"} , 
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ALL_SPECIES_LENGTH_2_MEASURING_TOOL_CODE", "location": "ros_common.measured_lengths→length_measuring_tool_code", "fk": "refs_biological.measurement_tools→code"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ALL_SPECIES_LENGTH_2_IS_STRAIGHT", "location": "ros_common.measured_lengths→curved"} , 
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ALL_SPECIES_WEIGHT_PROCESSING_TYPE_CODE", "location": "ros_common.measured_weights→processing_type_code", "fk": "refs_fishery.fish_processing_types→code"} , 
 { "OptionalMeasurementValueColumn": "SPECIMEN_DETAILS_ALL_SPECIES_WEIGHT_VALUE_KG", "location": "ros_common.measured_weights→value", "measurement_table": "ros_common.estimated_weights", "unit": "KG"} , 
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ALL_SPECIES_WEIGHT_ESTIMATION_METHOD_CODE", "location": "a→b", "fk": "refs_biological.→code", "comment": "Fixme : not found"} , 
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ALL_SPECIES_SEX", "location": "ros_common.biometric_information→sex_code", "fk": "refs_biological.sex→code"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ALL_SPECIES_MATURITY_SCALE", "location": "ros_common.maturity_stages→scale"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ALL_SPECIES_MATURITY_STAGE", "location": "ros_common.maturity_stages→maturity_level"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ALL_SPECIES_SAMPLE_COLLECTED_TYPE", "location": "ros_common.sample_collection_details→sample_type"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ALL_SPECIES_SAMPLE_COLLECTED_PRESERVATION_METHOD", "location": "ros_common.sample_collection_details→preservation_method"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ALL_SPECIES_TAG_DETAILS_RELEASE", "location": "ros_ll.tag_details→tag_release"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ALL_SPECIES_TAG_DETAILS_RECOVERY", "location": "ros_ll.tag_details→tag_recovery"} , 
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ALL_SPECIES_TAG_DETAILS_TYPE_CODE", "location": "ros_ll.tag_details→tag_type_code", "fk": "refs_biological.tag_types→code"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ALL_SPECIES_TAG_DETAILS_TAG_NUMBER_1", "location": "ros_ll.tag_details→tag_number"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ALL_SPECIES_TAG_DETAILS_TAG_NUMBER_2", "location": "ros_ll.tag_details→alternate_tag_number"} , 
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ALL_SPECIES_TAG_DETAILS_FINDER_NAME_AND_CONTACT_DETAILS", "location": "ros_ll.tag_details→tag_finder_id", "fk": "ros_common.person_contact_details→id"} ] } , 
 "E-SET-CATCHES-SPECIMEN-SSI": { "comment": "#[18] = E-SET-CATCHES-SPECIMEN-SSI | From row 6 - 16 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "SET_NUMBER", "location": "ros_ll.setting_operations→set_number", "comment": "Fixme : not found"} , 
 { "MandatorySimpleColumn": "CATCH_NUMBER", "location": "ros_ll.catch_details→catch_detail_number"} , 
 { "MandatorySimpleColumn": "SPECIMEN_NUMBER", "location": "ros_ll.specimens→specimen_number"} , 
 { "MandatoryForeignKeyColumn": "SPECIMEN_DETAILS_ADDITIONAL_CATCH_DETAILS_SSI_GEAR_INTERACTION_CODE", "location": "ros_ll.additional_catch_details_on_ssi→gear_interaction_code", "fk": "refs_biological.gear_interactions→code"} ,
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ADDITIONAL_CATCH_DETAILS_SSI_HOOK_TYPE_CODE", "location": "ros_ll.additional_catch_details_on_ssi→b", "fk": "refs_fishery.hook_types→code"} , 
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ADDITIONAL_CATCH_DETAILS_SSI_BAIT_CONDITION_CODE", "location": "ros_ll.additional_catch_details_on_ssi→bait_condition_code", "fk": "refs_biological.bait_conditions→code"} , 
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ADDITIONAL_CATCH_DETAILS_SSI_BAIT_TYPE_CODE", "location": "os_ll.additional_catch_details_on_ssi→bait_type", "fk": "refs_biological.bait_types→code"} , 
 { "MandatoryForeignKeyColumn": "SPECIMEN_DETAILS_ADDITIONAL_CATCH_DETAILS_SSI_LEADER_MATERIAL_CODE", "location": "ros_ll.additional_catch_details_on_ssi→leader_material_type_code", "fk": "refs_fishery.line_material_types→code"} ,
 { "OptionalMeasurementValueColumn": "SPECIMEN_DETAILS_ADDITIONAL_CATCH_DETAILS_SSI_LEADER_DIAMETER_MM", "location": "ros_ll.additional_catch_details_on_ssi→leader_thickness_id", "measurement_table": "ros_common.thicknesses", "unit": "MM"} , 
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ADDITIONAL_CATCH_DETAILS_SSI_DE_HOOKER_DEVICE_CODE", "location": "ros_ll.additional_catch_details_on_ssi→dehooker_device_code", "fk": "refs_fishery.dehooker_types→code"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ADDITIONAL_CATCH_DETAILS_SSI_LIGHT_ATTACHED", "location": "ros_ll.additional_catch_details_on_ssi→light_attached_to_branchline"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ADDITIONAL_CATCH_DETAILS_SSI_BROUGHT_ONBOARD", "location": "ros_ll.additional_catch_details_on_ssi→brought_on_board"} , 
 { "OptionalForeignKeyColumn": "SPECIMEN_DETAILS_ADDITIONAL_CATCH_DETAILS_SSI_HANDLING_METHOD_CODE", "location": "ros_ll.additional_catch_details_on_ssi→handling_method_code", "fk": "refs_biological.handling_methods→code"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ADDITIONAL_CATCH_DETAILS_SSI_REVIVAL", "location": "ros_ll.additional_catch_details_on_ssi→revival"} , 
 { "OptionalSimpleColumn": "SPECIMEN_DETAILS_ADDITIONAL_CATCH_DETAILS_SSI_PHOTO_ID", "location": "ros_ll.additional_catch_details_on_ssi→photo_id"} ] } , 
 "T-EVENTS": { "comment": "#[19] = T-EVENTS | From row 6 - 15 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "TRANSSHIPMENT_NUMBER", "location": "a→b", "comment": "Fixme : not found"} , 
 { "OptionalSimpleColumn": "VESSEL_TRANSSHIPMENT_EVENT_START_EVENT_DATE_TIME_UTC", "location": "ros_common.transhipment_details→transhipment_start_date_time"} , 
 { "OptionalSimpleColumn": "VESSEL_TRANSSHIPMENT_EVENT_START_EVENT_LATITUDE", "location": "ros_common.transhipment_details→latitude", "comment": "Fixme : there is only latitude and longitude on this table"} , 
 { "OptionalSimpleColumn": "VESSEL_TRANSSHIPMENT_EVENT_START_EVENT_LONGITUDE", "location": "ros_common.transhipment_details→longitude", "comment": "Fixme : there is only latitude and longitude on this table"} , 
 { "OptionalSimpleColumn": "VESSEL_TRANSSHIPMENT_EVENT_END_EVENT_DATE_TIME_UTC", "location": "ros_common.transhipment_details→transhipment_end_date_time"} , 
 { "OptionalSimpleColumn": "VESSEL_TRANSSHIPMENT_EVENT_END_EVENT_LATITUDE", "location": "ros_common.transhipment_details→latitude", "comment": "Fixme : there is only latitude and longitude on this table"} , 
 { "OptionalSimpleColumn": "VESSEL_TRANSSHIPMENT_EVENT_END_EVENT_LONGITUDE", "location": "ros_common.transhipment_details→longitude", "comment": "Fixme : there is only latitude and longitude on this table"} , 
 { "OptionalSimpleColumn": "VESSEL_TRANSSHIPMENT_EVENT_CATEGORY_CODE", "location": "ros_common.transhipment_details→category", "comment": "Fixme : this is not linked to code-list refs_fishery.transhipment_categories"} , 
 { "OptionalSimpleColumn": "VESSEL_TRANSSHIPMENT_EVENT_CARRIER_OR_FISHING_VESSEL_NAME", "location": "ros_common.carrier_vessel_identification→vessel_name"} , 
 { "OptionalForeignKeyColumn": "VESSEL_TRANSSHIPMENT_EVENT_CARRIER_OR_FISHING_VESSEL_FLAG_OR_CHARTERING_CODE", "location": "ros_common.carrier_vessel_identification→vessel_flag_code", "fk": "refs_admin.countries→code"} , 
 { "OptionalSimpleColumn": "VESSEL_TRANSSHIPMENT_EVENT_CARRIER_OR_FISHING_VESSEL_IRCS", "location": "ros_common.carrier_vessel_identification→vessel_ircs"} , 
 { "OptionalForeignKeyColumn": "VESSEL_TRANSSHIPMENT_EVENT_CARRIER_OR_FISHING_VESSEL_REGISTRATION_COUNTRY_CODE", "location": "ros_common.carrier_vessel_identification→b", "fk": "refs_admin.countries→code"} , 
 { "OptionalForeignKeyColumn": "VESSEL_TRANSSHIPMENT_EVENT_CARRIER_OR_FISHING_VESSEL_REGISTRATION_PORT_CODE", "location": "ros_common.carrier_vessel_identification→vessel_registration_port_code", "fk": "refs_admin.ports→code"} , 
 { "OptionalSimpleColumn": "VESSEL_TRANSSHIPMENT_EVENT_CARRIER_OR_FISHING_VESSEL_REGISTRATION_NUMBER", "location": "ros_common.carrier_vessel_identification→vessel_registration_number"} ] } , 
 "T-PRODUCTS": { "comment": "#[20] = T-PRODUCTS | From row 6 - 6 columns", "columns": [ 
 { "MandatorySimpleColumn": "OBSERVED_TRIP_NUMBER", "location": "ros_common.general_vessel_and_trip_information→trip_number"} , 
 { "MandatorySimpleColumn": "TRANSSHIPMENT_NUMBER", "location": "a→b", "comment": "Fixme : not found"} , 
 { "OptionalForeignKeyColumn": "PRODUCT_TRANSSHIPPED_SPECIES_CODE", "location": "ros_common.species_by_product_type→species_code", "fk": "refs_biological.species→code"} , 
 { "OptionalForeignKeyColumn": "PRODUCT_TRANSSHIPPED_PROCESSING_TYPE_CODE", "location": "ros_common.species_by_product_type→processing_type_code", "fk": "refs_fishery.fish_processing_types→code"} , 
 { "OptionalMeasurementValueColumn": "PRODUCT_TRANSSHIPPED_QUANTITY_VALUE", "location": "ros_common.species_by_product_type→value", "measurement_table": "ros_common.species_by_product_type"} , 
 { "OptionalMeasurementUnitColumn": "PRODUCT_TRANSSHIPPED_QUANTITY_KG_T", "units": ["KG" ,"T"]} ] } 
}}